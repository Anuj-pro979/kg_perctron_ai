<svg viewBox="0 0 1200 800" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="capsuleGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#4CAF50;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#2E7D32;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="encoderGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#2196F3;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#1565C0;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="algorithmGrad" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#FF9800;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#E65100;stop-opacity:1" />
    </linearGradient>
    <filter id="glow">
      <feGaussianBlur stdDeviation="3" result="coloredBlur"/>
      <feMerge> 
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
  </defs>
  
  <!-- Background -->
  <rect width="1200" height="800" fill="#0f0f0f"/>
  
  <!-- Title -->
  <text x="600" y="40" text-anchor="middle" fill="#fff" font-size="28" font-weight="bold">Knowledge Capsules Architecture</text>
  
  <!-- Input Query -->
  <rect x="50" y="100" width="200" height="60" rx="10" fill="#333" stroke="#555" stroke-width="2"/>
  <text x="150" y="125" text-anchor="middle" fill="#fff" font-size="14" font-weight="bold">User Query</text>
  <text x="150" y="145" text-anchor="middle" fill="#ccc" font-size="12">"How can I stay healthy?"</text>
  
  <!-- Sentence Encoder -->
  <rect x="300" y="80" width="180" height="100" rx="15" fill="url(#encoderGrad)" filter="url(#glow)"/>
  <text x="390" y="115" text-anchor="middle" fill="#fff" font-size="14" font-weight="bold">Sentence Encoder</text>
  <text x="390" y="135" text-anchor="middle" fill="#E3F2FD" font-size="12">all-MiniLM-L6-v2</text>
  <text x="390" y="155" text-anchor="middle" fill="#E3F2FD" font-size="11">Vector: [0.2, -0.1, 0.8...]</text>
  
  <!-- Arrow from Query to Encoder -->
  <path d="M 250 130 L 290 130" stroke="#4CAF50" stroke-width="3" fill="none" marker-end="url(#arrowgreen)"/>
  
  <!-- Knowledge Capsules Database -->
  <g transform="translate(550, 80)">
    <rect width="250" height="420" rx="20" fill="#1a1a1a" stroke="#444" stroke-width="2"/>
    <text x="125" y="30" text-anchor="middle" fill="#fff" font-size="16" font-weight="bold">Knowledge Capsules</text>
    
    <!-- Health Capsules -->
    <g transform="translate(20, 50)">
      <text x="0" y="0" fill="#4CAF50" font-size="12" font-weight="bold">Health Category:</text>
      
      <!-- Exercise Capsule -->
      <rect x="0" y="10" width="210" height="50" rx="8" fill="url(#capsuleGrad)" opacity="0.9"/>
      <text x="10" y="28" fill="#fff" font-size="11" font-weight="bold">exercise</text>
      <text x="10" y="42" fill="#E8F5E8" font-size="9">Physical exercise strengthens...</text>
      <text x="10" y="52" fill="#C8E6C9" font-size="8">Vector: [0.1, 0.3, 0.7...]</text>
      
      <!-- Nutrition Capsule -->
      <rect x="0" y="70" width="210" height="50" rx="8" fill="url(#capsuleGrad)" opacity="0.7"/>
      <text x="10" y="88" fill="#fff" font-size="11" font-weight="bold">nutrition</text>
      <text x="10" y="102" fill="#E8F5E8" font-size="9">Balanced nutrition with fruits...</text>
      <text x="10" y="112" fill="#C8E6C9" font-size="8">Vector: [0.4, -0.2, 0.9...]</text>
      
      <!-- Sleep Capsule -->
      <rect x="0" y="130" width="210" height="50" rx="8" fill="url(#capsuleGrad)" opacity="0.6"/>
      <text x="10" y="148" fill="#fff" font-size="11" font-weight="bold">sleep</text>
      <text x="10" y="162" fill="#E8F5E8" font-size="9">Quality sleep allows body repair...</text>
      <text x="10" y="172" fill="#C8E6C9" font-size="8">Vector: [0.2, 0.1, 0.5...]</text>
    </g>
    
    <!-- Tech Capsules -->
    <g transform="translate(20, 240)">
      <text x="0" y="0" fill="#2196F3" font-size="12" font-weight="bold">Technology Category:</text>
      
      <rect x="0" y="10" width="210" height="50" rx="8" fill="#1976D2" opacity="0.3"/>
      <text x="10" y="28" fill="#fff" font-size="11" font-weight="bold">programming</text>
      <text x="10" y="42" fill="#E3F2FD" font-size="9">Programming involves writing...</text>
      
      <rect x="0" y="70" width="210" height="50" rx="8" fill="#1976D2" opacity="0.3"/>
      <text x="10" y="88" fill="#fff" font-size="11" font-weight="bold">ai_basics</text>
      <text x="10" y="102" fill="#E3F2FD" font-size="9">AI uses algorithms and data...</text>
    </g>
  </g>
  
  <!-- Arrow from Encoder to Capsules -->
  <path d="M 480 130 L 540 130" stroke="#2196F3" stroke-width="3" fill="none" marker-end="url(#arrowblue)"/>
  
  <!-- Processing Algorithm -->
  <rect x="850" y="80" width="300" height="420" rx="20" fill="url(#algorithmGrad)" opacity="0.1" stroke="#FF9800" stroke-width="2"/>
  <text x="1000" y="110" text-anchor="middle" fill="#FF9800" font-size="16" font-weight="bold">5-Step Processing Algorithm</text>
  
  <!-- Step boxes -->
  <g transform="translate(870, 130)">
    <!-- Step 1 -->
    <rect x="0" y="0" width="260" height="50" rx="8" fill="#FF9800" opacity="0.8"/>
    <text x="10" y="20" fill="#fff" font-size="12" font-weight="bold">1. Calculate Similarities</text>
    <text x="10" y="35" fill="#FFF3E0" font-size="10">Cosine similarity between query and capsules</text>
    <text x="10" y="47" fill="#FFE0B2" font-size="9">exercise: 0.85, nutrition: 0.72, sleep: 0.68</text>
    
    <!-- Step 2 -->
    <rect x="0" y="60" width="260" height="50" rx="8" fill="#FF9800" opacity="0.7"/>
    <text x="10" y="80" fill="#fff" font-size="12" font-weight="bold">2. Apply Activation (threshold: 0.4)</text>
    <text x="10" y="95" fill="#FFF3E0" font-size="10">Filter capsules above threshold</text>
    <text x="10" y="107" fill="#FFE0B2" font-size="9">✅ exercise, nutrition, sleep ACTIVE</text>
    
    <!-- Step 3 -->
    <rect x="0" y="120" width="260" height="50" rx="8" fill="#FF9800" opacity="0.6"/>
    <text x="10" y="140" fill="#fff" font-size="12" font-weight="bold">3. Calculate Inter-Capsule Signals</text>
    <text x="10" y="155" fill="#FFF3E0" font-size="10">Active capsules boost connected ones</text>
    <text x="10" y="167" fill="#FFE0B2" font-size="9">exercise → nutrition: +0.15</text>
    
    <!-- Step 4 -->
    <rect x="0" y="180" width="260" height="50" rx="8" fill="#FF9800" opacity="0.5"/>
    <text x="10" y="200" fill="#fff" font-size="12" font-weight="bold">4. Final Activations</text>
    <text x="10" y="215" fill="#FFF3E0" font-size="10">Original + Signal Boost</text>
    <text x="10" y="227" fill="#FFE0B2" font-size="9">exercise: 0.85, nutrition: 0.87, sleep: 0.68</text>
    
    <!-- Step 5 -->
    <rect x="0" y="240" width="260" height="50" rx="8" fill="#FF9800" opacity="0.4"/>
    <text x="10" y="260" fill="#fff" font-size="12" font-weight="bold">5. Generate Response</text>
    <text x="10" y="275" fill="#FFF3E0" font-size="10">Combine top active capsules</text>
    <text x="10" y="287" fill="#FFE0B2" font-size="9">Use top 3 capsules for answer</text>
  </g>
  
  <!-- Arrow from Capsules to Algorithm -->
  <path d="M 800 290 L 840 290" stroke="#4CAF50" stroke-width="3" fill="none" marker-end="url(#arrowgreen)"/>
  
  <!-- Connection Network -->
  <g transform="translate(550, 550)">
    <text x="125" y="0" text-anchor="middle" fill="#fff" font-size="14" font-weight="bold">Capsule Connection Network</text>
    
    <!-- Capsule nodes -->
    <circle cx="50" cy="40" r="20" fill="#4CAF50" opacity="0.8"/>
    <text x="50" y="45" text-anchor="middle" fill="#fff" font-size="8">exercise</text>
    
    <circle cx="150" cy="40" r="20" fill="#4CAF50" opacity="0.8"/>
    <text x="150" y="45" text-anchor="middle" fill="#fff" font-size="8">nutrition</text>
    
    <circle cx="200" cy="100" r="20" fill="#4CAF50" opacity="0.8"/>
    <text x="200" y="105" text-anchor="middle" fill="#fff" font-size="8">sleep</text>
    
    <circle cx="100" cy="100" r="20" fill="#4CAF50" opacity="0.6"/>
    <text x="100" y="105" text-anchor="middle" fill="#fff" font-size="8">stress</text>
    
    <!-- Connection lines with weights -->
    <line x1="70" y1="40" x2="130" y2="40" stroke="#4CAF50" stroke-width="3" opacity="0.7"/>
    <text x="100" y="35" text-anchor="middle" fill="#4CAF50" font-size="8">0.65</text>
    
    <line x1="150" y1="60" x2="180" y2="85" stroke="#4CAF50" stroke-width="2" opacity="0.6"/>
    <text x="165" y="75" text-anchor="middle" fill="#4CAF50" font-size="8">0.45</text>
    
    <line x1="70" y1="60" x2="120" y2="85" stroke="#4CAF50" stroke-width="2" opacity="0.5"/>
    <text x="95" y="80" text-anchor="middle" fill="#4CAF50" font-size="8">0.38</text>
  </g>
  
  <!-- Output -->
  <rect x="950" y="580" width="200" height="80" rx="10" fill="#333" stroke="#4CAF50" stroke-width="2"/>
  <text x="1050" y="605" text-anchor="middle" fill="#4CAF50" font-size="12" font-weight="bold">Generated Response</text>
  <text x="1050" y="620" text-anchor="middle" fill="#ccc" font-size="10">Based on my knowledge:</text>
  <text x="1050" y="635" text-anchor="middle" fill="#ccc" font-size="9">Exercise strengthens muscles...</text>
  <text x="1050" y="650" text-anchor="middle" fill="#ccc" font-size="9">Balanced nutrition provides...</text>
  
  <!-- Arrow from Algorithm to Output -->
  <path d="M 1000 500 L 1050 570" stroke="#FF9800" stroke-width="3" fill="none" marker-end="url(#arroworange)"/>
  
  <!-- Learning Feedback Loop -->
  <path d="M 950 620 Q 400 700 300 200" stroke="#9C27B0" stroke-width="2" fill="none" stroke-dasharray="5,5" marker-end="url(#arrowpurple)"/>
  <text x="600" y="720" text-anchor="middle" fill="#9C27B0" font-size="12">Learning Feedback Loop</text>
  <text x="600" y="735" text-anchor="middle" fill="#CE93D8" font-size="10">Strengthens/weakens connections based on user feedback</text>
  
  <!-- Arrow markers -->
  <defs>
    <marker id="arrowgreen" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L0,6 L9,3 z" fill="#4CAF50"/>
    </marker>
    <marker id="arrowblue" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L0,6 L9,3 z" fill="#2196F3"/>
    </marker>
    <marker id="arroworange" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L0,6 L9,3 z" fill="#FF9800"/>
    </marker>
    <marker id="arrowpurple" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L0,6 L9,3 z" fill="#9C27B0"/>
    </marker>
  </defs>
  
  <!-- Legend -->
  <g transform="translate(50, 600)">
    <text x="0" y="0" fill="#fff" font-size="14" font-weight="bold">Key Components:</text>
    <circle cx="10" cy="20" r="5" fill="#2196F3"/>
    <text x="25" y="25" fill="#ccc" font-size="10">Sentence Encoder (Vector Generation)</text>
    <circle cx="10" cy="40" r="5" fill="#4CAF50"/>
    <text x="25" y="45" fill="#ccc" font-size="10">Knowledge Capsules (Text + Vector)</text>
    <circle cx="10" cy="60" r="5" fill="#FF9800"/>
    <text x="25" y="65" fill="#ccc" font-size="10">Processing Algorithm (5 Steps)</text>
    <circle cx="10" cy="80" r="5" fill="#9C27B0"/>
    <text x="25" y="85" fill="#ccc" font-size="10">Learning Mechanism (Feedback)</text>
  </g>
</svg>